name: Build and Deploy to Azure Web App (Robust)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: paprmemorymcp
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'
  DOCKER_IMAGE_NAME: papr-mcp-http
  ACR_NAME: testpaprcontainer
  ACR_USERNAME: testPaprContainer

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install deps (CI)
      run: |
        cd python-mcp
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        cd python-mcp
        python -m pytest tests/ -v || echo "Tests failed, continuing to deploy"

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: ACR login
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_NAME }}.azurecr.io -u ${{ env.ACR_USERNAME }} --password-stdin

    - name: Build & push image
      run: |
        cd python-mcp
        # Build
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
        docker tag  ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        # (optional latest)
        docker tag  ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest
        # Push
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Trigger SCM webhook for automatic deployment
      run: |
        curl -X POST "https://${{ env.AZURE_WEBAPP_NAME }}:1dehG7uunQCYSr40lhrFZTrnglikjNsAQ1rokd4NsxAxfcG1pPq9LyEs7xrF@${{ env.AZURE_WEBAPP_NAME }}-g0heeseedzcnckbg.scm.westus-01.azurewebsites.net/api/registry/webhook" \
          -H "Content-Type: application/json" \
          -d '{"tag": "latest"}'

    - name: Configure container on Web App (retry)
      run: |
        for i in {1..3}; do
          echo "Attempt $i: Configure container image..."
          if az webapp config container set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group memory \
            --container-image-name ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} \
            --container-registry-url https://${{ env.ACR_NAME }}.azurecr.io \
            --container-registry-user ${{ env.ACR_USERNAME }} \
            --container-registry-password "${{ secrets.ACR_PASSWORD }}"; then
            echo "Container configuration OK"
            break
          fi
          sleep 10
        done

    # IMPORTANT: file path + entry func, not module path
    - name: Set startup command (retry)
      run: |
        for i in {1..3}; do
          echo "Attempt $i: Set startup command..."
          if az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group memory \
            --startup-file "fastmcp run papr_memory_mcp.core:init_mcp --transport http --host 0.0.0.0 --port 8000"; then
            echo "Startup command set"
            break
          fi
          sleep 10
        done

    # Route external 443 â†’ container:8000
    - name: Configure app settings (retry)
      run: |
        for i in {1..3}; do
          echo "Attempt $i: Set app settings..."
          if az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group memory \
            --settings WEBSITES_PORT=8000 WEBSITES_CONTAINER_START_TIME_LIMIT=180; then
            echo "App settings OK"
            break
          fi
          sleep 10
        done

    # (Optional) Enable container logs to diagnose boots
    - name: Enable logs
      run: |
        az webapp log config \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group memory \
          --docker-container-logging filesystem

    - name: Restart app
      run: |
        az webapp restart --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group memory

    - name: Show hostname + settings
      run: |
        echo "Image: ${{ env.ACR_NAME }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
        echo "Startup: fastmcp run papr_memory_mcp.core:init_mcp --transport http --host 0.0.0.0 --port 8000"
