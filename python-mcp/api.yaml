openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /:
    get:
      summary: Home
      operationId: home__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /ai-plugin.json:
    get:
      summary: Serve Ai Plugin
      operationId: serve_ai_plugin_ai_plugin_json_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /.well-known/ai-plugin.json:
    get:
      summary: Serve Ai Plugin
      operationId: serve_ai_plugin__well_known_ai_plugin_json_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openapi.yaml:
    get:
      summary: Serve Openapi
      operationId: serve_openapi_openapi_yaml_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /.well-known/openapi.yaml:
    get:
      summary: Serve Openapi
      operationId: serve_openapi__well_known_openapi_yaml_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /logo.png:
    get:
      summary: Serve Logo
      operationId: serve_logo_logo_png_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /.well-known/logo.png:
    get:
      summary: Serve Logo
      operationId: serve_logo__well_known_logo_png_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health:
    get:
      summary: Health Check
      operationId: health_check_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /login:
    get:
      summary: Login
      operationId: login_login_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /callback:
    get:
      summary: Callback
      operationId: callback_callback_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /token:
    post:
      summary: Token
      operationId: token_token_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /me:
    get:
      summary: Me
      operationId: me_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /logout:
    get:
      summary: Logout
      operationId: logout_logout_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /add_memory:
    post:
      summary: Add Memory
      description: "Add a single memory item with size validation.\n\nArgs:\n    request\
        \ (Request): FastAPI request object containing memory data\n    background_tasks\
        \ (BackgroundTasks): FastAPI background tasks handler\n    skip_background_processing\
        \ (bool): If True, skips adding background tasks for processing\nReturns:\n\
        \    AddMemoryResponse: Response containing the stored memory item data\n\
        \        - success (bool): Whether the operation was successful\n        -\
        \ data (ParseStoredMemory): The stored memory item\n        - error (Optional[str]):\
        \ Error message if any\n\nRaises:\n    HTTPException:\n        - 400: Invalid\
        \ request format or data\n        - 401: Invalid or missing authorization\n\
        \        - 403: Subscription or rate limit reached\n        - 413: Content\
        \ size exceeds maximum limit\n        - 415: Unsupported Media Type (not json/form-data/form-urlencoded)\n\
        \        - 500: Internal server error"
      operationId: add_memory_add_memory_post
      parameters:
      - name: skip_background_processing
        in: query
        required: false
        schema:
          type: boolean
          description: If True, skips adding background tasks for processing
          default: false
          title: Skip Background Processing
        description: If True, skips adding background tasks for processing
      responses:
        '200':
          description: Memory successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Subscription limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '413':
          description: Content too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /add_memory_batch:
    post:
      summary: Add Memory Batch
      description: Add multiple memory items in a batch.
      operationId: add_memory_batch_add_memory_batch_post
      parameters:
      - name: skip_background_processing
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Skip Background Processing
      - name: batch_size
        in: query
        required: false
        schema:
          type: integer
          default: 5
          title: Batch Size
      responses:
        '200':
          description: Memory successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Subscription limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '413':
          description: Content too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /add_memory/{tenant_subtenant}/{connector}/{stream}:
    post:
      summary: Add Memory With Details
      description: "Add a memory item with tenant/connector/stream details.\n\nReturns:\n\
        \    AddMemoryResponse: Response containing the stored memory item data"
      operationId: add_memory_with_details_add_memory__tenant_subtenant___connector___stream__post
      parameters:
      - name: tenant_subtenant
        in: path
        required: true
        schema:
          type: string
          title: Tenant Subtenant
      - name: connector
        in: path
        required: true
        schema:
          type: string
          title: Connector
      - name: stream
        in: path
        required: true
        schema:
          type: string
          title: Stream
      - name: skip_background_processing
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Skip Background Processing
      responses:
        '200':
          description: Memory successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Subscription limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '413':
          description: Content too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /add_memory_batch/{tenant_subtenant}/{connector}/{stream}:
    post:
      summary: Add Memory Batch With Details
      description: Add multiple memory items in a batch with tenant details.
      operationId: add_memory_batch_with_details_add_memory_batch__tenant_subtenant___connector___stream__post
      parameters:
      - name: tenant_subtenant
        in: path
        required: true
        schema:
          type: string
          title: Tenant Subtenant
      - name: connector
        in: path
        required: true
        schema:
          type: string
          title: Connector
      - name: stream
        in: path
        required: true
        schema:
          type: string
          title: Stream
      - name: batch_size
        in: query
        required: false
        schema:
          type: integer
          default: 5
          title: Batch Size
      - name: skip_background_processing
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Skip Background Processing
      responses:
        '200':
          description: Memory successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Subscription limit reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '413':
          description: Content too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /get_memory:
    post:
      summary: Get Memory
      description: "Retrieve relevant memory items based on query and context.\n\n\
        Returns:\n    GetMemoryResponse: Contains list of relevant memory items\n\
        \    \nRaises:\n    HTTPException:\n        - 400: Bad request\n        -\
        \ 401: Unauthorized\n        - 403: Rate limit exceeded\n        - 404: No\
        \ relevant items found\n        - 415: Unsupported Media Type\n        - 500:\
        \ Internal server error"
      operationId: get_memory_get_memory_post
      responses:
        '200':
          description: Successfully retrieved memories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: No relevant items found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '415':
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /delete_memory:
    delete:
      summary: Delete Memory
      description: "Delete a memory item by ID.\n\nArgs:\n    request (Request): FastAPI\
        \ request object\n    id (str): ID of the memory to delete\n\nReturns:\n \
        \   DeleteMemoryResponse: Response containing deletion status\n        - message:\
        \ Optional success message\n        - error: Optional error message\n    \
        \    - memoryId: ID of the deleted memory\n        - objectId: Parse Server\
        \ object ID\n        - status: DeletionStatus for each system\n        - code:\
        \ Status code string\n\nRaises:\n    HTTPException:\n        - 400: Missing\
        \ or invalid memory ID\n        - 401: Invalid or missing authorization\n\
        \        - 404: Memory not found\n        - 500: Internal server error"
      operationId: delete_memory_delete_memory_delete
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
          description: ID of the memory to delete
          title: Id
        description: ID of the memory to delete
      - name: skip_parse
        in: query
        required: false
        schema:
          type: boolean
          description: Skip Parse Server deletion
          default: false
          title: Skip Parse
        description: Skip Parse Server deletion
      responses:
        '200':
          description: Memory successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMemoryResponse'
        '207':
          description: Partially successful deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMemoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Memory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMemoryResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMemoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /update_memory:
    put:
      summary: Update Memory
      description: "Update a memory item by ID.\n\nArgs:\n    request (Request): FastAPI\
        \ request object\n    id (str): ID of the memory to update (passed as query\
        \ parameter)\n    content (Optional[str]): New content for the memory\n  \
        \  metadata (Optional[Dict]): Updated metadata\n    type (Optional[str]):\
        \ Type of memory\n    background_tasks (BackgroundTasks): FastAPI background\
        \ tasks handler\n\nReturns:\n    UpdateMemoryResponse: Response containing\
        \ updated memory items"
      operationId: update_memory_update_memory_put
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
          description: ID of the memory to update
          title: Id
        description: ID of the memory to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_update_memory_update_memory_put'
      responses:
        '200':
          description: Memory successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMemoryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Memory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AddMemoryItem:
      properties:
        memoryId:
          type: string
          title: Memoryid
        createdAt:
          type: string
          format: date-time
          title: Createdat
        objectId:
          type: string
          title: Objectid
        memoryChunkIds:
          items:
            type: string
          type: array
          title: Memorychunkids
      additionalProperties: false
      type: object
      required:
      - memoryId
      - createdAt
      - objectId
      title: AddMemoryItem
      description: Response model for a single memory item in add_memory response
    AddMemoryResponse:
      properties:
        code:
          type: integer
          title: Code
          default: 200
        data:
          items:
            $ref: '#/components/schemas/AddMemoryItem'
          type: array
          title: Data
        status:
          type: string
          title: Status
          default: success
      additionalProperties: false
      type: object
      required:
      - data
      title: AddMemoryResponse
      description: Response model for add_memory API endpoint
    BatchMemoryError:
      properties:
        index:
          type: integer
          title: Index
        error:
          type: string
          title: Error
      type: object
      required:
      - index
      - error
      title: BatchMemoryError
    BatchMemoryResponse:
      properties:
        successful:
          items:
            $ref: '#/components/schemas/AddMemoryResponse'
          type: array
          title: Successful
        errors:
          items:
            $ref: '#/components/schemas/BatchMemoryError'
          type: array
          title: Errors
        total_processed:
          type: integer
          title: Total Processed
        total_successful:
          type: integer
          title: Total Successful
        total_failed:
          type: integer
          title: Total Failed
        total_content_size:
          type: integer
          title: Total Content Size
        total_storage_size:
          type: integer
          title: Total Storage Size
      type: object
      required:
      - successful
      - errors
      - total_processed
      - total_successful
      - total_failed
      - total_content_size
      - total_storage_size
      title: BatchMemoryResponse
    Body_update_memory_update_memory_put:
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      type: object
      title: Body_update_memory_update_memory_put
    DeleteMemoryResponse:
      properties:
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
        memoryId:
          type: string
          title: Memoryid
        objectId:
          type: string
          title: Objectid
        status:
          $ref: '#/components/schemas/DeletionStatus'
        code:
          type: string
          title: Code
      additionalProperties: false
      type: object
      required:
      - memoryId
      - objectId
      - status
      - code
      title: DeleteMemoryResponse
    DeletionStatus:
      properties:
        pinecone:
          type: boolean
          title: Pinecone
          default: false
        neo4j:
          type: boolean
          title: Neo4J
          default: false
        parse:
          type: boolean
          title: Parse
          default: false
      type: object
      title: DeletionStatus
    ErrorDetail:
      properties:
        detail:
          type: string
          title: Detail
      type: object
      required:
      - detail
      title: ErrorDetail
    GetMemoryResponse:
      properties:
        data:
          $ref: '#/components/schemas/RelatedMemoryResult'
        success:
          type: boolean
          title: Success
          default: true
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
      type: object
      required:
      - data
      title: GetMemoryResponse
      example:
        data: []
        success: true
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    NeoCodeNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        language:
          type: string
          title: Language
        author:
          type: string
          title: Author
      additionalProperties: false
      type: object
      required:
      - id
      - name
      - language
      - author
      title: NeoCodeNode
      description: Code node with all Neo4j properties
    NeoCompanyNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
      additionalProperties: false
      type: object
      required:
      - id
      - name
      - description
      title: NeoCompanyNode
      description: Company node with all Neo4j properties
    NeoInsightNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        source:
          type: string
          title: Source
        type:
          type: string
          enum:
          - customer_insight
          - product_insight
          - market_insight
          - competitive_insight
          - technical_insight
          - other
          title: Type
      additionalProperties: false
      type: object
      required:
      - id
      - title
      - description
      - source
      - type
      title: NeoInsightNode
      description: Insight node with all Neo4j properties
    NeoMeetingNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        agenda:
          type: string
          title: Agenda
        type:
          type: string
          title: Type
        participants:
          items:
            type: string
          type: array
          title: Participants
        date:
          type: string
          title: Date
        time:
          type: string
          title: Time
        summary:
          type: string
          title: Summary
        outcome:
          type: string
          title: Outcome
        action_items:
          items:
            type: string
          type: array
          title: Action Items
      additionalProperties: false
      type: object
      required:
      - id
      - title
      - agenda
      - type
      - participants
      - date
      - time
      - summary
      - outcome
      - action_items
      title: NeoMeetingNode
      description: Meeting node with all Neo4j properties
    NeoMemoryNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        content:
          type: string
          title: Content
        type:
          type: string
          title: Type
        topics:
          items:
            type: string
          type: array
          title: Topics
        emotion_tags:
          items:
            type: string
          type: array
          title: Emotion Tags
        steps:
          items:
            type: string
          type: array
          title: Steps
        current_step:
          type: string
          title: Current Step
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        emoji_tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Emoji Tags
        hierarchical_structures:
          anyOf:
          - type: string
          - type: 'null'
          title: Hierarchical Structures
          default: ''
      additionalProperties: false
      type: object
      required:
      - id
      - content
      - type
      - topics
      - emotion_tags
      - steps
      - current_step
      title: NeoMemoryNode
      description: Memory node with all Neo4j properties
    NeoNode:
      properties:
        label:
          $ref: '#/components/schemas/NodeLabel'
        properties:
          anyOf:
          - $ref: '#/components/schemas/NeoMemoryNode'
          - $ref: '#/components/schemas/NeoPersonNode'
          - $ref: '#/components/schemas/NeoCompanyNode'
          - $ref: '#/components/schemas/NeoProjectNode'
          - $ref: '#/components/schemas/NeoTaskNode'
          - $ref: '#/components/schemas/NeoInsightNode'
          - $ref: '#/components/schemas/NeoMeetingNode'
          - $ref: '#/components/schemas/NeoOpportunityNode'
          - $ref: '#/components/schemas/NeoCodeNode'
          title: Properties
      type: object
      required:
      - label
      - properties
      title: NeoNode
      description: Generic Neo4j node that combines label and type-specific properties
    NeoOpportunityNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        value:
          type: number
          title: Value
        stage:
          type: string
          enum:
          - prospect
          - lead
          - opportunity
          - won
          - lost
          title: Stage
        close_date:
          type: string
          title: Close Date
        probability:
          type: number
          title: Probability
        next_steps:
          items:
            type: string
          type: array
          title: Next Steps
      additionalProperties: false
      type: object
      required:
      - id
      - title
      - description
      - value
      - stage
      - close_date
      - probability
      - next_steps
      title: NeoOpportunityNode
      description: Opportunity node with all Neo4j properties
    NeoPersonNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        role:
          type: string
          title: Role
        description:
          type: string
          title: Description
      additionalProperties: false
      type: object
      required:
      - id
      - name
      - role
      - description
      title: NeoPersonNode
      description: Person node with all Neo4j properties
    NeoProjectNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        description:
          type: string
          title: Description
      additionalProperties: false
      type: object
      required:
      - id
      - name
      - type
      - description
      title: NeoProjectNode
      description: Project node with all Neo4j properties
    NeoTaskNode:
      properties:
        user_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Read Access
        user_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: User Write Access
        workspace_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Read Access
        workspace_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Workspace Write Access
        role_read_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Read Access
        role_write_access:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Role Write Access
        workspace_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Workspace Id
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
        sourceType:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourcetype
        sourceUrl:
          anyOf:
          - type: string
          - type: 'null'
          title: Sourceurl
        pageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Pageid
        conversationId:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversationid
        createdAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
          - type: 'null'
          title: Updatedat
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        status:
          type: string
          enum:
          - new
          - in_progress
          - completed
          title: Status
        type:
          type: string
          enum:
          - task
          - subtask
          - bug
          - feature_request
          - epic
          - support_ticket
          title: Type
      additionalProperties: false
      type: object
      required:
      - id
      - title
      - description
      - status
      - type
      title: NeoTaskNode
      description: Task node with all Neo4j properties
    NodeLabel:
      type: string
      enum:
      - Memory
      - Person
      - Company
      - Project
      - Task
      - Insight
      - Meeting
      - Opportunity
      - Code
      title: NodeLabel
    ParsePointer:
      properties:
        objectId:
          type: string
          title: Objectid
        __type:
          type: string
          title: Type
          default: Pointer
        className:
          type: string
          title: Classname
      additionalProperties: false
      type: object
      required:
      - objectId
      - className
      title: ParsePointer
      description: A pointer to a Parse object
    ParseStoredMemory:
      properties:
        objectId:
          type: string
          title: Objectid
        createdAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Createdat
        updatedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Updatedat
        ACL:
          additionalProperties:
            additionalProperties:
              type: boolean
            type: object
          type: object
          title: Acl
        content:
          type: string
          title: Content
        metadata:
          anyOf:
          - type: string
          - type: object
          - type: 'null'
          title: Metadata
        sourceType:
          type: string
          title: Sourcetype
          default: ''
        context:
          type: string
          title: Context
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
        emojiTags:
          items:
            type: string
          type: array
          title: Emojitags
        hierarchicalStructures:
          type: string
          title: Hierarchicalstructures
          default: ''
        type:
          type: string
          title: Type
        sourceUrl:
          type: string
          title: Sourceurl
          default: ''
        conversationId:
          type: string
          title: Conversationid
          default: ''
        memoryId:
          type: string
          title: Memoryid
        topics:
          items:
            type: string
          type: array
          title: Topics
        steps:
          items:
            type: string
          type: array
          title: Steps
        current_step:
          anyOf:
          - type: string
          - type: 'null'
          title: Current Step
        memoryChunkIds:
          items:
            type: string
          type: array
          title: Memorychunkids
        user:
          $ref: '#/components/schemas/ParseUserPointer'
        workspace:
          anyOf:
          - $ref: '#/components/schemas/ParsePointer'
          - type: 'null'
        post:
          anyOf:
          - $ref: '#/components/schemas/ParsePointer'
          - type: 'null'
        postMessage:
          anyOf:
          - $ref: '#/components/schemas/ParsePointer'
          - type: 'null'
        matchingChunkIds:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Matchingchunkids
      additionalProperties: true
      type: object
      required:
      - objectId
      - ACL
      - content
      - type
      - memoryId
      - user
      title: ParseStoredMemory
    ParseUserPointer:
      properties:
        objectId:
          type: string
          title: Objectid
        __type:
          type: string
          title: Type
          default: Pointer
        className:
          type: string
          const: _User
          title: Classname
          default: _User
        displayName:
          anyOf:
          - type: string
          - type: 'null'
          title: Displayname
        fullname:
          anyOf:
          - type: string
          - type: 'null'
          title: Fullname
        profileimage:
          anyOf:
          - type: string
          - type: object
          - type: 'null'
          title: Profileimage
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        isOnline:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Isonline
        companies:
          anyOf:
          - type: object
          - type: 'null'
          title: Companies
      additionalProperties: false
      type: object
      required:
      - objectId
      title: ParseUserPointer
      description: A pointer to a Parse User object that can also handle expanded
        user objects
    RelatedMemoryResult:
      properties:
        memory_items:
          items:
            $ref: '#/components/schemas/ParseStoredMemory'
          type: array
          title: Memory Items
        neo_nodes:
          items:
            $ref: '#/components/schemas/NeoNode'
          type: array
          title: Neo Nodes
        neo_context:
          anyOf:
          - type: string
          - type: 'null'
          title: Neo Context
        neo_query:
          anyOf:
          - type: string
          - type: 'null'
          title: Neo Query
      type: object
      required:
      - memory_items
      - neo_nodes
      title: RelatedMemoryResult
      description: Return type for find_related_memory_items_async
    SystemUpdateStatus:
      properties:
        pinecone:
          type: boolean
          title: Pinecone
          default: false
        neo4j:
          type: boolean
          title: Neo4J
          default: false
        parse:
          type: boolean
          title: Parse
          default: false
      type: object
      title: SystemUpdateStatus
      description: Status of update operation for each system
    UpdateMemoryItem:
      properties:
        objectId:
          type: string
          title: Objectid
        memoryId:
          type: string
          title: Memoryid
        content:
          type: string
          title: Content
        updatedAt:
          type: string
          format: date-time
          title: Updatedat
      additionalProperties: false
      type: object
      required:
      - objectId
      - memoryId
      - content
      - updatedAt
      title: UpdateMemoryItem
      description: Model for a single updated memory item
    UpdateMemoryResponse:
      properties:
        message:
          type: string
          title: Message
          default: Memory item(s) updated
        memory_items:
          anyOf:
          - items:
              $ref: '#/components/schemas/UpdateMemoryItem'
            type: array
          - type: 'null'
          title: Memory Items
        success:
          type: boolean
          title: Success
          default: true
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
        status:
          $ref: '#/components/schemas/SystemUpdateStatus'
        code:
          type: integer
          title: Code
          default: 200
      additionalProperties: false
      type: object
      title: UpdateMemoryResponse
      description: Response model for update_memory API endpoint
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError

